openapi: 3.0.3
info:
  title: API Movies
  version: 1.0.10
  description: API de peliculas, rese√±as y recomendaciones.
paths:
  /genres/:
    get:
      operationId: genres_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - genres
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGenreListList'
          description: ''
    post:
      operationId: genres_create
      tags:
      - genres
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenreList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenreList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenreList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreList'
          description: ''
  /genres/{id}/:
    get:
      operationId: genres_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - genres
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreList'
          description: ''
    put:
      operationId: genres_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - genres
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenreList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenreList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenreList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreList'
          description: ''
    patch:
      operationId: genres_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - genres
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGenreList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGenreList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGenreList'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreList'
          description: ''
    delete:
      operationId: genres_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - genres
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /movies/:
    get:
      operationId: movies_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMovieListList'
          description: ''
    post:
      operationId: movies_create
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MovieList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MovieList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieList'
          description: ''
  /movies/{id}/:
    get:
      operationId: movies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieDetail'
          description: ''
    put:
      operationId: movies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MovieDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MovieDetail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieDetail'
          description: ''
    patch:
      operationId: movies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMovieDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMovieDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMovieDetail'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieDetail'
          description: ''
    delete:
      operationId: movies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - movies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /recommend/:
    get:
      operationId: recommend_retrieve
      tags:
      - recommend
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /reviews/:
    get:
      operationId: reviews_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewListList'
          description: ''
    post:
      operationId: reviews_create
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewList'
          description: ''
  /reviews/{id}/:
    get:
      operationId: reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
    put:
      operationId: reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
    patch:
      operationId: reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewDetail'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
    delete:
      operationId: reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Usuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
  /users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /users/logout/:
    delete:
      operationId: users_logout_destroy
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    put:
      operationId: users_me_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Usuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    patch:
      operationId: users_me_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUsuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUsuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUsuario'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    delete:
      operationId: users_me_destroy
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    GenreList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
      required:
      - id
      - name
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    MovieDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 32
        director:
          type: string
          maxLength: 32
        description:
          type: string
        year:
          type: integer
          maximum: 2024
          minimum: 1900
        rating:
          type: number
          format: double
          maximum: 10
          minimum: 1
        images:
          type: string
          format: uri
        genre:
          type: integer
      required:
      - description
      - director
      - genre
      - id
      - title
      - year
    MovieList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 32
        director:
          type: string
          maxLength: 32
        description:
          type: string
        year:
          type: integer
          maximum: 2024
          minimum: 1900
        rating:
          type: number
          format: double
          maximum: 10
          minimum: 1
        images:
          type: string
          format: uri
        genre:
          type: integer
      required:
      - description
      - director
      - genre
      - id
      - title
      - year
    NameEnum:
      enum:
      - FANTASY
      - HORROR
      - ROMANCE
      - ACTION
      - COMEDY
      - DRAMA
      - SCIFI
      type: string
      description: |-
        * `FANTASY` - fantasy
        * `HORROR` - horror
        * `ROMANCE` - romance
        * `ACTION` - action
        * `COMEDY` - comedy
        * `DRAMA` - drama
        * `SCIFI` - sci-fi
    PaginatedGenreListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenreList'
    PaginatedMovieListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MovieList'
    PaginatedReviewListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewList'
    PatchedGenreList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
    PatchedMovieDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 32
        director:
          type: string
          maxLength: 32
        description:
          type: string
        year:
          type: integer
          maximum: 2024
          minimum: 1900
        rating:
          type: number
          format: double
          maximum: 10
          minimum: 1
        images:
          type: string
          format: uri
        genre:
          type: integer
    PatchedReviewDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review:
          type: string
        rating:
          type: integer
          maximum: 10
          minimum: 1
        user:
          type: integer
        movie:
          type: integer
    PatchedUsuario:
      type: object
      properties:
        nombre:
          type: string
          maxLength: 256
        tel:
          type: string
          maxLength: 32
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 256
    ReviewDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review:
          type: string
        rating:
          type: integer
          maximum: 10
          minimum: 1
        user:
          type: integer
        movie:
          type: integer
      required:
      - id
      - movie
      - rating
      - review
      - user
    ReviewList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review:
          type: string
        rating:
          type: integer
          maximum: 10
          minimum: 1
        user:
          type: integer
        movie:
          type: integer
      required:
      - id
      - movie
      - rating
      - review
      - user
    Usuario:
      type: object
      properties:
        nombre:
          type: string
          maxLength: 256
        tel:
          type: string
          maxLength: 32
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 256
      required:
      - email
      - nombre
      - password
      - tel
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
